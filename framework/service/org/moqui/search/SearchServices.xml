<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.0.xsd">

    <service verb="index" noun="DataDocuments" authenticate="false">
        <implements service="org.moqui.EntityServices.receive#DataFeed"/>
        <in-parameters>
            <parameter name="dataFeedId" required="false"/>
            <parameter name="feedStamp" type="Timestamp" required="false"/>
            <parameter name="getOriginalDocuments" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="documentVersionList" type="List" required="true"/>
            <parameter name="originalDocumentList" type="List" required="false"/>
        </out-parameters>
        <actions><message>No search implementation installed, not indexing DataDocuments (see the moqui-elasticsearch component)</message></actions>
    </service>
    <service verb="put" noun="DataDocumentMappings">
        <in-parameters><parameter name="indexName" required="true"/></in-parameters>
        <actions><message>No search implementation installed, not putting DataDocument mappings (see the moqui-elasticsearch component)</message></actions>
    </service>
    <service verb="index" noun="DataFeedDocuments" authenticate="false" transaction-timeout="600">
        <in-parameters>
            <parameter name="dataFeedId" required="true"/>
            <parameter name="fromUpdateStamp" type="Timestamp"/>
            <parameter name="thruUpdateStamp" type="Timestamp"/>
        </in-parameters>
        <out-parameters><parameter name="documentsIndexed" type="Integer"/></out-parameters>
        <actions><message>No search implementation installed, not indexing DataFeed Documents (see the moqui-elasticsearch component)</message></actions>
    </service>
    <service verb="index" noun="WikiSpacePages">
        <in-parameters>
            <parameter name="wikiSpaceId"/>
            <parameter name="dataDocumentId" required="true"/>
        </in-parameters>
        <actions><message>No search implementation installed, not indexing Wiki Space Pages (see the moqui-elasticsearch component)</message></actions>
    </service>

    <service verb="search" noun="DataDocuments">
        <in-parameters>
            <parameter name="indexName" required="true"/>
            <parameter name="documentType"/>
            <parameter name="queryString" required="true"/>
            <parameter name="orderByFields" type="List"><parameter name="orderByField"/></parameter>
            <parameter name="pageIndex" type="Integer" default="0"/>
            <parameter name="pageSize" type="Integer" default="20"/>
            <parameter name="flattenDocument" type="Boolean" default="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="documentList" type="List"><parameter name="document" type="Map"/></parameter>
            <parameter name="documentListCount" type="Integer"><description>The total count of hits, not just the
                limited number returned.</description></parameter>
            <parameter name="documentListPageIndex" type="Integer"/>
            <parameter name="documentListPageSize" type="Integer"/>
            <parameter name="documentListPageMaxIndex" type="Integer"/>
            <parameter name="documentListPageRangeLow" type="Integer"/>
            <parameter name="documentListPageRangeHigh" type="Integer"/>
        </out-parameters>
        <actions><message>No search implementation installed, not searching DataDocuments (see the moqui-elasticsearch component)</message></actions>
    </service>
    <service verb="search" noun="CountBySource">
        <in-parameters>
            <parameter name="indexName" required="true"/>
            <parameter name="documentTypeList" type="List"><parameter name="documentType"/></parameter>
            <parameter name="maxResults" type="Integer" default="1000"/>
            <parameter name="sourceJson"/>
            <parameter name="sourceMap" type="Map"/>
        </in-parameters>
        <out-parameters><parameter name="searchResponse" type="Object"/></out-parameters>
        <actions><message>No search implementation installed, not searching DataDocuments by source (see the moqui-elasticsearch component)</message></actions>
    </service>
</services>
