# A Docker Compose application with mysql and virtual hosting through
# nginx-proxy supporting multiple moqui instances on different hosts.

# This has no moqui instances, meant to be a shell for externally
# managed moqui containers.

# Run with something like:
# $ docker-compose -f nginx-mysql-compose.yml -p moqui up -d
# This sets the project/app name to 'moqui' and the network will be 'moqui_default', to be used by external moqui containers

version: "2"
services:
  nginx-proxy:
    # For documentation on SSL and other settings see:
    # https://github.com/jwilder/nginx-proxy
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - 80:80
      # - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # - /path/to/certs:/etc/nginx/certs

  moqui-database:
    image: mysql:5.7
    container_name: moqui-database
    restart: unless-stopped
    # expose the port for use outside other containers, needed for external management (like Moqui Instance Management)
    ports:
     - 3306:3306
    # edit these as needed to map configuration and data storage
    volumes:
     - ./db/mysql/data:/var/lib/mysql
     # - /my/mysql/conf.d:/etc/mysql/conf.d
    environment:
     - MYSQL_ROOT_PASSWORD=moquiroot
     - MYSQL_DATABASE=moqui
     - MYSQL_USER=moqui
     - MYSQL_PASSWORD=moqui
