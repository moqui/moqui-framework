# NOTE: ElasticSearch uses odd user and directory setup for externally mapped data, etc directories, see:
# https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html

# Make sure vm.max_map_count=262144 is set in /etc/sysctl.conf on host (on live system run 'sudo sysctl -w vm.max_map_count=262144')

# A Docker Compose application with 2 moqui instances, mysql, elasticsearch, kibana, and virtual hosting through
# nginx-proxy supporting multiple moqui instances on different hosts.

# The 'moqui' image should be prepared with the MySQL JDBC jar and the moqui-hazelcast and moqui-elasticsearch components.

# This does virtual hosting instead of load balancing so that each moqui instance can be accessed consistently (moqui1.local, moqui2.local).

# Run with something like this for detached mode:
# $ docker-compose -f moqui-cluster1-compose.yml -p moqui up -d
# Or to copy runtime directories for mounted volumes, set default settings, etc use something like this:
# $ ./compose-run.sh moqui-cluster1-compose.yml
# This sets the project/app name to 'moqui' and the network will be 'moqui_default', to be used by external moqui containers

# Test locally by adding the virtual host to /etc/hosts or with something like:
# $ curl -H "Host: moqui1.local" localhost/Login

version: "2"
services:
  nginx-proxy:
    # For documentation on SSL and other settings see:
    # https://github.com/jwilder/nginx-proxy
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # note: .crt, .key, and .dhparam.pem files start with the domain name in VIRTUAL_HOST (ie 'moqui.local.*') or use CERT_NAME env var
      - ./certs:/etc/nginx/certs
      - ./nginx/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf

  moqui-server1:
    image: moqui
    container_name: moqui-server1
    command: conf=conf/MoquiProductionConf.xml
    restart: unless-stopped
    links:
     - moqui-database
     - elasticsearch
    volumes:
     - ./runtime/conf:/opt/moqui/runtime/conf
     - ./runtime/lib:/opt/moqui/runtime/lib
     - ./runtime/classes:/opt/moqui/runtime/classes
     - ./runtime/ecomponent:/opt/moqui/runtime/ecomponent
     # conf directories shared (under runtime), log/etc directories per server (runtime1, runtime2)
     - ./runtime1/log:/opt/moqui/runtime/log
     - ./runtime1/txlog:/opt/moqui/runtime/txlog
     - ./runtime1/sessions:/opt/moqui/runtime/sessions
     # this one isn't needed when not using H2/etc: - ./runtime/db:/opt/moqui/runtime/db
     # ES should be setup with no local storage, so don't do:
     - ./runtime1/elasticsearch:/opt/moqui/runtime/elasticsearch
     - ./elasticsearch/moquiconfig:/opt/moqui/runtime/component/moqui-elasticsearch/home/config
    environment:
     - instance_purpose=production
     - entity_ds_db_conf=mysql
     - entity_ds_host=moqui-database
     - entity_ds_port=3306
     - entity_ds_database=moqui
     - entity_ds_user=moqui
     - entity_ds_password=moqui
     - entity_ds_crypt_pass='MoquiDefaultPassword:CHANGEME'
     # CHANGE ME - note that VIRTUAL_HOST is for nginx-proxy so it picks up this container as one it should reverse proxy
     # this can be a comma separate list of hosts like 'example.com,www.example.com'
     - VIRTUAL_HOST=moqui1.local
     # moqui will accept traffic from other hosts but these are the values used for URL writing when specified:
     - webapp_http_host=moqui1.local
     - webapp_http_port=80
     - webapp_https_port=443
     - webapp_https_enabled=true
     - default_locale=en_US
     - default_time_zone=US/Pacific
     # settings for kibana proxy
     - kibana_host=kibana
     # comment or set to 'embedded' to have Moqui use embedded coordinating node instead of ElasticSearch REST client
     - elasticsearch_mode=rest
     - elasticsearch_host1=http://elasticsearch:9200
     # hazelcast multicast setup
     - hazelcast_multicast_enabled=true
     - hazelcast_multicast_group=224.2.2.3
     - hazelcast_multicast_port=54327
     - hazelcast_group_name=test
     - hazelcast_group_password=test-pass
  moqui-server2:
    image: moqui
    container_name: moqui-server2
    command: conf=conf/MoquiProductionConf.xml
    restart: unless-stopped
    links:
     - moqui-database
     - elasticsearch
     - moqui-server1
    volumes:
     - ./runtime/conf:/opt/moqui/runtime/conf
     - ./runtime/lib:/opt/moqui/runtime/lib
     - ./runtime/classes:/opt/moqui/runtime/classes
     - ./runtime/ecomponent:/opt/moqui/runtime/ecomponent
     # conf directories shared (under runtime), log/etc directories per server (runtime1, runtime2)
     - ./runtime2/log:/opt/moqui/runtime/log
     - ./runtime2/txlog:/opt/moqui/runtime/txlog
     - ./runtime2/sessions:/opt/moqui/runtime/sessions
     # this one isn't needed when not using H2/etc: - ./runtime/db:/opt/moqui/runtime/db
     # ES should be setup with no local storage, so don't do:
     - ./runtime2/elasticsearch:/opt/moqui/runtime/elasticsearch
     - ./elasticsearch/moquiconfig:/opt/moqui/runtime/component/moqui-elasticsearch/home/config
    environment:
     - instance_purpose=production
     - entity_ds_db_conf=mysql
     - entity_ds_host=moqui-database
     - entity_ds_port=3306
     - entity_ds_database=moqui
     - entity_ds_user=moqui
     - entity_ds_password=moqui
     - entity_ds_crypt_pass='MoquiDefaultPassword:CHANGEME'
     # CHANGE ME - note that VIRTUAL_HOST is for nginx-proxy so it picks up this container as one it should reverse proxy
     # this can be a comma separate list of hosts like 'example.com,www.example.com'
     - VIRTUAL_HOST=moqui2.local
     # moqui will accept traffic from other hosts but these are the values used for URL writing when specified:
     - webapp_http_host=moqui2.local
     - webapp_http_port=80
     - webapp_https_port=443
     - webapp_https_enabled=true
     - default_locale=en_US
     - default_time_zone=US/Pacific
     # settings for kibana proxy
     - kibana_host=kibana
     # comment or set to 'embedded' to have Moqui use embedded coordinating node instead of ElasticSearch REST client
     - elasticsearch_mode=rest
     - elasticsearch_host1=http://elasticsearch:9200
     # hazelcast multicast setup
     - hazelcast_multicast_enabled=true
     - hazelcast_multicast_group=224.2.2.3
     - hazelcast_multicast_port=54327
     - hazelcast_group_name=test
     - hazelcast_group_password=test-pass

  moqui-database:
    image: mysql:5.7
    container_name: moqui-database
    restart: unless-stopped
    ports:
     # change this as needed to bind to any address or even comment to not expose port outside containers
     - 127.0.0.1:3306:3306
    volumes:
     # edit these as needed to map configuration and data storage
     - ./db/mysql/data:/var/lib/mysql
     # - /my/mysql/conf.d:/etc/mysql/conf.d
    environment:
     - MYSQL_ROOT_PASSWORD=moquiroot
     - MYSQL_DATABASE=moqui
     - MYSQL_USER=moqui
     - MYSQL_PASSWORD=moqui

  elasticsearch:
    # very important: use the '-oss' version otherwise x-pack is included and because of licensing, etc moqui instances can't join the cluster
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.2
    container_name: elasticsearch
    # command: elasticsearch
    restart: unless-stopped
    ports:
     # change this as needed to bind to any address or even comment to not expose port outside containers
     - 127.0.0.1:9200:9200
     - 127.0.0.1:9300:9300
    volumes:
     # edit these as needed to map configuration and data storage
     - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
     - ./elasticsearch/data:/usr/share/elasticsearch/data
     # - ./elasticsearch/logs:/usr/share/elasticsearch/logs
    environment:
     - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"

  kibana:
    # using the docker hub image which does not include X-Pack (causes issues because embedded ES does not including X-Pack)
    # the kibana image on docker hub is deprecated and slated to be removed, then will need an alternative without X-Pack
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: kibana
    restart: unless-stopped
    ports:
     - 127.0.0.1:5601:5601
    links:
     - elasticsearch
    volumes:
     - ./kibana:/etc/kibana
    environment:
     # override value in kibana.yml so it can remain for other setups; NOTE: kibana may modify the kibana.yml file for this setting!
     - ELASTICSEARCH_URL=http://elasticsearch:9200
     # - SERVER_BASEPATH=/kibana
     # - SERVER_HOST=kibana
     # - XPACK_SECURITY_ENABLED=false
     # - XPACK_MONITORING_ENABLED=false
